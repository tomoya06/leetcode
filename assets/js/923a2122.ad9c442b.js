"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1744],{3905:function(e,n,r){r.d(n,{Zo:function(){return f},kt:function(){return u}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),d=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},f=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},s=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,f=c(e,["components","mdxType","originalType","parentName"]),s=d(r),u=o,m=s["".concat(l,".").concat(u)]||s[u]||p[u]||i;return r?t.createElement(m,a(a({ref:n},f),{},{components:r})):t.createElement(m,a({ref:n},f))}));function u(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=r[d];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}s.displayName="MDXCreateElement"},8604:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return f},Highlight:function(){return p},default:function(){return u}});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],c={tags:["\u5251\u6307offer"],id:"\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",title:"\ud83d\udfe1 \u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811"},l=void 0,d={unversionedId:"\u5251\u6307offer/\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",id:"\u5251\u6307offer/\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",isDocsHomePage:!1,title:"\ud83d\udfe1 \u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",description:"<span",source:"@site/docs/\u5251\u6307offer/offer07_\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811.mdx",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",permalink:"/docs/\u5251\u6307offer/\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",tags:[{label:"\u5251\u6307offer",permalink:"/docs/tags/\u5251\u6307offer"}],version:"current",frontMatter:{tags:["\u5251\u6307offer"],id:"\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",title:"\ud83d\udfe1 \u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811"},sidebar:"codezone",previous:{title:"\ud83d\udfe1 \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",permalink:"/docs/\u5251\u6307offer/\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811"},next:{title:"\ud83d\udfe2 \u5bf9\u79f0\u7684\u4e8c\u53c9\u6811",permalink:"/docs/\u5251\u6307offer/\u5bf9\u79f0\u7684\u4e8c\u53c9\u6811"}},f=[{value:"\u9898\u89e3 1.py",id:"\u9898\u89e3-1py",children:[]},{value:"online_name: \u5251\u6307 Offer 07. \u91cd\u5efa\u4e8c\u53c9\u6811",id:"online_name-\u5251\u6307-offer-07-\u91cd\u5efa\u4e8c\u53c9\u6811",children:[]}],p=function(e){var n=e.children,r=e.color;return(0,i.kt)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},s={toc:f,Highlight:p};function u(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"LeetCode \u63d0\u793a")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"\u9898\u76ee\u96be\u5ea6 ",(0,i.kt)(p,{color:"#ffc01e",mdxType:"Highlight"},"\u4e2d\u7b49")))),(0,i.kt)("h2",{id:"\u9898\u89e3-1py"},"\u9898\u89e3 1.py"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# @lc app=leetcode.cn id=105 lang=python3\n#\n# [105]\n#\n\n# TODO: \u641e\u4e00\u4e2a\u8fed\u4ee3\u7248\u7684\n\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:\n        if len(preorder) == 0:\n            return None\n        mid = preorder[0]\n        inidx = inorder.index(mid)\n        leftPreorder = preorder[1:inidx+1]\n        leftInorder = inorder[0:inidx]\n        rightPreorder = preorder[inidx+1:]\n        rightInorder = inorder[inidx+1:]\n        midNode = TreeNode(mid)\n        midNode.left = self.buildTree(leftPreorder, leftInorder)\n        midNode.right = self.buildTree(rightPreorder, rightInorder)\n        return midNode\n\n# @lc code=end\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"id: offer07\nname: \u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811\nonline_link: ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/"},"https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/")),(0,i.kt)("h2",{id:"online_name-\u5251\u6307-offer-07-\u91cd\u5efa\u4e8c\u53c9\u6811"},"online_name: \u5251\u6307 Offer 07. \u91cd\u5efa\u4e8c\u53c9\u6811"))}u.isMDXComponent=!0}}]);