"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1898],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function f(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?f(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},f=Object.keys(e);for(t=0;t<f.length;t++)r=f[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(e);for(t=0;t<f.length;t++)r=f[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,f=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),d=o,m=p["".concat(l,".").concat(d)]||p[d]||s[d]||f;return r?t.createElement(m,a(a({ref:n},u),{},{components:r})):t.createElement(m,a({ref:n},u))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var f=r.length,a=new Array(f);a[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<f;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5719:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var t=r(7462),o=r(3366),f=(r(7294),r(3905)),a=["components"],i={tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},l="\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",c={unversionedId:"\u5251\u6307offer/offer41_295_\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",id:"\u5251\u6307offer/offer41_295_\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",isDocsHomePage:!1,title:"\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",description:"\u9898\u89e3 1_\u6284\u7684.py",source:"@site/docs/\u5251\u6307offer/offer41_295_\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer41_295_\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",permalink:"/leetcode/docs/\u5251\u6307offer/offer41_295_\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer41_295_\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570.md",tags:[{label:"\u5251\u6307offer",permalink:"/leetcode/docs/tags/\u5251\u6307offer"},{label:"\u4e8c\u53c9\u6811",permalink:"/leetcode/docs/tags/\u4e8c\u53c9\u6811"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},sidebar:"tutorialSidebar",previous:{title:"\u6700\u5c0f\u7684k\u4e2a\u6570",permalink:"/leetcode/docs/\u5251\u6307offer/offer40_\u6700\u5c0f\u7684k\u4e2a\u6570"},next:{title:"\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c",permalink:"/leetcode/docs/\u5251\u6307offer/offer42_53_\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c"}},u=[{value:"\u9898\u89e3 1_\u6284\u7684.py",id:"\u9898\u89e3-1_\u6284\u7684py",children:[]}],s={toc:u};function p(e){var n=e.components,r=(0,o.Z)(e,a);return(0,f.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,f.kt)("h1",{id:"\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570"},"\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570"),(0,f.kt)("h2",{id:"\u9898\u89e3-1_\u6284\u7684py"},"\u9898\u89e3 1_\u6284\u7684.py"),(0,f.kt)("pre",null,(0,f.kt)("code",{parentName:"pre",className:"language-.py"},'# ##\u5251\u6307offer#\u4e8c\u53c9\u6811##levelh\nfrom heapq import *\n\nclass MedianFinder:\n\n    def __init__(self):\n        """\n        initialize your data structure here.\n        """\n        self.left = []\n        self.right = []\n\n\n    def addNum(self, num: int) -> None:\n        if len(self.left) == len(self.right):\n            heappush(self.left, -heappushpop(self.right, num))\n        else:\n            heappush(self.right, -heappushpop(self.left, -num))\n\n    def findMedian(self) -> float:\n        return -self.left[0] if len(self.left) != len(self.right) else (self.right[0]-self.left[0])/2\n\n\n\n# Your MedianFinder object will be instantiated and called as such:\n# obj = MedianFinder()\n# obj.addNum(num)\n# param_2 = obj.findMedian()\n')))}p.isMDXComponent=!0}}]);