"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1469],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return d}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function f(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),u=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},l=function(e){var r=u(e.components);return t.createElement(c.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=f(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,m=p["".concat(c,".").concat(d)]||p[d]||s[d]||a;return n?t.createElement(m,i(i({ref:r},l),{},{components:n})):t.createElement(m,i({ref:r},l))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var f={};for(var c in r)hasOwnProperty.call(r,c)&&(f[c]=r[c]);f.originalType=e,f.mdxType="string"==typeof e?e:o,i[1]=f;for(var u=2;u<a;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},687:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return f},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var t=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],f={tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},c="\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",u={unversionedId:"\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",id:"\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",isDocsHomePage:!1,title:"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",description:"\u9898\u89e3 1_\u5077\u7784\u4e86.py",source:"@site/docs/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",permalink:"/docs/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217.md",tags:[{label:"\u5251\u6307offer",permalink:"/docs/tags/\u5251\u6307offer"},{label:"\u4e8c\u53c9\u6811",permalink:"/docs/tags/\u4e8c\u53c9\u6811"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},sidebar:"tutorialSidebar",previous:{title:"I_\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",permalink:"/docs/\u5251\u6307offer/offer32_I_\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811"},next:{title:"\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84",permalink:"/docs/\u5251\u6307offer/offer34_113_\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84"}},l=[{value:"\u9898\u89e3 1_\u5077\u7784\u4e86.py",id:"\u9898\u89e3-1_\u5077\u7784\u4e86py",children:[]},{value:"\u9898\u89e3 2<em>\u904d\u5386\u5012\u5e8f</em>\u6284\u7684.py",id:"\u9898\u89e3-2\u904d\u5386\u5012\u5e8f\u6284\u7684py",children:[]}],s={toc:l};function p(e){var r=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217"},"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217"),(0,a.kt)("h2",{id:"\u9898\u89e3-1_\u5077\u7784\u4e86py"},"\u9898\u89e3 1_\u5077\u7784\u4e86.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-.py"},"# ##\u5251\u6307offer#\u4e8c\u53c9\u6811##levelm\nclass Solution:\n    def verifyPostorder(self, postorder: List[int]) -> bool:\n        def order(l, r):\n            if l >= r:\n                return True\n            cur = l\n            while cur < r and postorder[cur] < postorder[r]:\n                cur += 1\n            suf = r\n            while suf >= 0 and postorder[suf] >= postorder[r]:\n                suf -= 1\n            if cur != suf+1:\n                return False\n            return order(l, suf) and order(cur, r-1)\n\n        return order(0, len(postorder)-1)\n \n")),(0,a.kt)("h2",{id:"\u9898\u89e3-2\u904d\u5386\u5012\u5e8f\u6284\u7684py"},"\u9898\u89e3 2",(0,a.kt)("em",{parentName:"h2"},"\u904d\u5386\u5012\u5e8f"),"\u6284\u7684.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-.py"},"# \u4e0d\u592a\u5bb9\u6613\u60f3\u5230\n# \u6284\u7684\u9898\u89e3\uff1a\n# https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/solution/di-gui-he-zhan-liang-chong-fang-shi-jie-jue-zui-ha/\nclass Solution:\n    def verifyPostorder(self, postorder: List[int]) -> bool:\n        stack, root = [], float('inf')\n        for idx in range(len(postorder)-1, -1, -1):\n            if postorder[idx] > root:\n                return False\n            while stack and postorder[idx] < stack[-1]:\n                root = stack.pop(-1)\n            stack.append(postorder[idx])\n        return True\n\n")))}p.isMDXComponent=!0}}]);