"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1942],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return d}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function f(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):f(f({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,b=p["".concat(c,".").concat(d)]||p[d]||s[d]||i;return n?t.createElement(b,f(f({ref:r},u),{},{components:n})):t.createElement(b,f({ref:r},u))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,f=new Array(i);f[0]=p;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,f[1]=a;for(var l=2;l<i;l++)f[l]=n[l];return t.createElement.apply(null,f)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5927:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),f=["components"],a={tags:["\u5251\u6307offer","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u4e8c\u53c9\u6811"]},c="\u6811\u7684\u5b50\u7ed3\u6784",l={unversionedId:"\u5251\u6307offer/offer26_\u6811\u7684\u5b50\u7ed3\u6784",id:"\u5251\u6307offer/offer26_\u6811\u7684\u5b50\u7ed3\u6784",isDocsHomePage:!1,title:"\u6811\u7684\u5b50\u7ed3\u6784",description:"\u9898\u89e3 1.py",source:"@site/docs/\u5251\u6307offer/offer26_\u6811\u7684\u5b50\u7ed3\u6784.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer26_\u6811\u7684\u5b50\u7ed3\u6784",permalink:"/leetcode/docs/\u5251\u6307offer/offer26_\u6811\u7684\u5b50\u7ed3\u6784",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer26_\u6811\u7684\u5b50\u7ed3\u6784.md",tags:[{label:"\u5251\u6307offer",permalink:"/leetcode/docs/tags/\u5251\u6307offer"},{label:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/leetcode/docs/tags/\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u4e8c\u53c9\u6811",permalink:"/leetcode/docs/tags/\u4e8c\u53c9\u6811"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u4e8c\u53c9\u6811"]},sidebar:"tutorialSidebar",previous:{title:"\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868",permalink:"/leetcode/docs/\u5251\u6307offer/offer25_\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868"},next:{title:"\u4e8c\u53c9\u6811\u7684\u955c\u50cf",permalink:"/leetcode/docs/\u5251\u6307offer/offer27_226_\u4e8c\u53c9\u6811\u7684\u955c\u50cf"}},u=[{value:"\u9898\u89e3 1.py",id:"\u9898\u89e3-1py",children:[]}],s={toc:u};function p(e){var r=e.components,n=(0,o.Z)(e,f);return(0,i.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u6811\u7684\u5b50\u7ed3\u6784"},"\u6811\u7684\u5b50\u7ed3\u6784"),(0,i.kt)("h2",{id:"\u9898\u89e3-1py"},"\u9898\u89e3 1.py"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-.py"},"# ##\u5251\u6307offer#\u6df1\u5ea6\u4f18\u5148\u641c\u7d22#\u4e8c\u53c9\u6811##levelm\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSubStructure(self, A: TreeNode, B: TreeNode) -> bool:\n        if B is None and A is not None:\n            return False\n        \n        def isSub(a: TreeNode, b: TreeNode):\n            return b is None or a is not None and b is not None and a.val == b.val and (\n                    b.left is None or isSub(a.left, b.left)\n                ) and (\n                    b.right is None or isSub(a.right, b.right)\n                )\n            \n        return isSub(A, B) or A.left is not None and self.isSubStructure(A.left, B) or A.right is not None and self.isSubStructure(A.right, B)\n\n")))}p.isMDXComponent=!0}}]);