"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4957],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function f(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?f(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},f=Object.keys(e);for(t=0;t<f.length;t++)r=f[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(e);for(t=0;t<f.length;t++)r=f[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,f=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=l(r),d=o,y=p["".concat(c,".").concat(d)]||p[d]||u[d]||f;return r?t.createElement(y,a(a({ref:n},s),{},{components:r})):t.createElement(y,a({ref:n},s))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var f=r.length,a=new Array(f);a[0]=p;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var l=2;l<f;l++)a[l]=r[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3660:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var t=r(7462),o=r(3366),f=(r(7294),r(3905)),a=["components"],i={tags:["\u5251\u6307offer","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},c="\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",l={unversionedId:"\u5251\u6307offer/offer13_\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",id:"\u5251\u6307offer/offer13_\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",isDocsHomePage:!1,title:"\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",description:"\u9898\u89e3 1.py",source:"@site/docs/\u5251\u6307offer/offer13_\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer13_\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",permalink:"/leetcode/docs/\u5251\u6307offer/offer13_\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer13_\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4.md",tags:[{label:"\u5251\u6307offer",permalink:"/leetcode/docs/tags/\u5251\u6307offer"},{label:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/leetcode/docs/tags/\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/leetcode/docs/tags/\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"]},sidebar:"tutorialSidebar",previous:{title:"\u77e9\u9635\u4e2d\u7684\u8def\u5f84",permalink:"/leetcode/docs/\u5251\u6307offer/offer12_79_\u77e9\u9635\u4e2d\u7684\u8def\u5f84"},next:{title:"\u526a\u7ef3\u5b50",permalink:"/leetcode/docs/\u5251\u6307offer/offer14_343_\u526a\u7ef3\u5b50"}},s=[{value:"\u9898\u89e3 1.py",id:"\u9898\u89e3-1py",children:[]},{value:"\u9898\u89e3 2_\u53ea\u8981\u5411\u53f3\u5411\u4e0b.py",id:"\u9898\u89e3-2_\u53ea\u8981\u5411\u53f3\u5411\u4e0bpy",children:[]}],u={toc:s};function p(e){var n=e.components,r=(0,o.Z)(e,a);return(0,f.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,f.kt)("h1",{id:"\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4"},"\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4"),(0,f.kt)("h2",{id:"\u9898\u89e3-1py"},"\u9898\u89e3 1.py"),(0,f.kt)("pre",null,(0,f.kt)("code",{parentName:"pre",className:"language-.py"},"# ##\u5251\u6307offer#\u6df1\u5ea6\u4f18\u5148\u641c\u7d22#\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22##levelm\nclass Solution:\n    def movingCount(self, m: int, n: int, k: int) -> int:\n        boards = [['' for _ in range(m)] for _ in range(n)]\n        self.cnt = 0\n        def dfs(x, y):\n            if x < 0 or x >= m or y < 0 or y >= n:\n                return\n            if boards[y][x] == '.':\n                return\n            x1, x2 = x//10, x%10\n            y1, y2 = y//10, y%10\n            if x1+x2+y1+y2 > k:\n                return\n            boards[y][x] = '.'\n            self.cnt += 1\n            dfs(x+1, y)\n            dfs(x-1, y)\n            dfs(x, y+1)\n            dfs(x, y-1)\n            \n        dfs(0, 0)\n        return self.cnt\n\n")),(0,f.kt)("h2",{id:"\u9898\u89e3-2_\u53ea\u8981\u5411\u53f3\u5411\u4e0bpy"},"\u9898\u89e3 2_\u53ea\u8981\u5411\u53f3\u5411\u4e0b.py"),(0,f.kt)("pre",null,(0,f.kt)("code",{parentName:"pre",className:"language-.py"},"# \u66f4\u5feb\u4e00\u70b9\nclass Solution:\n    def movingCount(self, m: int, n: int, k: int) -> int:\n        boards = [['' for _ in range(m)] for _ in range(n)]\n        self.cnt = 0\n        def dfs(x, y):\n            if x < 0 or x >= m or y < 0 or y >= n:\n                return\n            if boards[y][x] == '.':\n                return\n            x1, x2 = x//10, x%10\n            y1, y2 = y//10, y%10\n            if x1+x2+y1+y2 > k:\n                return\n            boards[y][x] = '.'\n            self.cnt += 1\n            dfs(x+1, y)\n            dfs(x, y+1)\n\n        dfs(0, 0)\n        return self.cnt\n\n")))}p.isMDXComponent=!0}}]);