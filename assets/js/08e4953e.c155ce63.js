"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2910],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function f(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?f(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},f=Object.keys(e);for(t=0;t<f.length;t++)r=f[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(e);for(t=0;t<f.length;t++)r=f[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=t.createContext({}),l=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=l(e.components);return t.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,f=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(r),d=o,m=p["".concat(a,".").concat(d)]||p[d]||u[d]||f;return r?t.createElement(m,i(i({ref:n},s),{},{components:r})):t.createElement(m,i({ref:n},s))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var f=r.length,i=new Array(f);i[0]=p;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<f;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7617:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var t=r(7462),o=r(3366),f=(r(7294),r(3905)),i=["components"],c={tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},a="\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",l={unversionedId:"\u5251\u6307offer/offer54_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",id:"\u5251\u6307offer/offer54_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",isDocsHomePage:!1,title:"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",description:"\u9898\u89e3 1.py",source:"@site/docs/\u5251\u6307offer/offer54_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer54_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",permalink:"/leetcode/docs/\u5251\u6307offer/offer54_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer54_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9.md",tags:[{label:"\u5251\u6307offer",permalink:"/leetcode/docs/tags/\u5251\u6307offer"},{label:"\u4e8c\u53c9\u6811",permalink:"/leetcode/docs/tags/\u4e8c\u53c9\u6811"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},sidebar:"tutorialSidebar",previous:{title:"\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57",permalink:"/leetcode/docs/\u5251\u6307offer/offer53_\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57"},next:{title:"\u5e73\u8861\u4e8c\u53c9\u6811",permalink:"/leetcode/docs/\u5251\u6307offer/offer55_110_\u5e73\u8861\u4e8c\u53c9\u6811"}},s=[{value:"\u9898\u89e3 1.py",id:"\u9898\u89e3-1py",children:[]}],u={toc:s};function p(e){var n=e.components,r=(0,o.Z)(e,i);return(0,f.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,f.kt)("h1",{id:"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9"},"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9"),(0,f.kt)("h2",{id:"\u9898\u89e3-1py"},"\u9898\u89e3 1.py"),(0,f.kt)("pre",null,(0,f.kt)("code",{parentName:"pre",className:"language-.py"},"# ##\u5251\u6307offer#\u4e8c\u53c9\u6811##levele\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def kthLargest(self, root: TreeNode, k: int) -> int:\n        if not root:\n            return -1\n        self.cnt = 0\n        self.res = None\n\n        def visit(node):\n            if self.res is not None:\n                return\n            if node.right:\n                visit(node.right)\n            self.cnt += 1\n            if self.cnt == k:\n                self.res = node.val\n                return \n            if node.left:\n                visit(node.left)\n        visit(root)\n        return self.res\n\n")))}p.isMDXComponent=!0}}]);