"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6391],{3905:function(e,r,n){n.d(r,{Zo:function(){return d},kt:function(){return s}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function f(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=t.createContext({}),l=function(e){var r=t.useContext(a),n=r;return e&&(n="function"==typeof e?e(r):f(f({},r),e)),n},d=function(e){var r=l(e.components);return t.createElement(a.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(n),s=o,m=p["".concat(a,".").concat(s)]||p[s]||u[s]||i;return n?t.createElement(m,f(f({ref:r},d),{},{components:n})):t.createElement(m,f({ref:r},d))}));function s(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,f=new Array(i);f[0]=p;var c={};for(var a in r)hasOwnProperty.call(r,a)&&(c[a]=r[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,f[1]=c;for(var l=2;l<i;l++)f[l]=n[l];return t.createElement.apply(null,f)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3574:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var t=n(7462),o=n(3366),i=(n(7294),n(3905)),f=["components"],c={tags:["\u5251\u6307offer"]},a="\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",l={unversionedId:"\u5251\u6307offer/offer07_105_\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",id:"\u5251\u6307offer/offer07_105_\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",isDocsHomePage:!1,title:"\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",description:"\u9898\u89e3 1.py",source:"@site/docs/\u5251\u6307offer/offer07_105_\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer07_105_\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",permalink:"/docs/\u5251\u6307offer/offer07_105_\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer07_105_\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811.md",tags:[{label:"\u5251\u6307offer",permalink:"/docs/tags/\u5251\u6307offer"}],version:"current",frontMatter:{tags:["\u5251\u6307offer"]},sidebar:"tutorialSidebar",previous:{title:"\u5012\u5e8f\u8f93\u51fa\u94fe\u8868",permalink:"/docs/\u5251\u6307offer/offer06_\u5012\u5e8f\u8f93\u51fa\u94fe\u8868"},next:{title:"\u53cc\u6808\u5b9e\u73b0\u961f\u5217",permalink:"/docs/\u5251\u6307offer/offer09_\u53cc\u6808\u5b9e\u73b0\u961f\u5217"}},d=[{value:"\u9898\u89e3 1.py",id:"\u9898\u89e3-1py",children:[]}],u={toc:d};function p(e){var r=e.components,n=(0,o.Z)(e,f);return(0,i.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811"},"\u524d\u5e8f\u4e2d\u5e8f\u8fd8\u539f\u4e8c\u53c9\u6811"),(0,i.kt)("h2",{id:"\u9898\u89e3-1py"},"\u9898\u89e3 1.py"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-.py"},"# ##\u5251\u6307offer##levelm\n# @lc app=leetcode.cn id=105 lang=python3\n#\n# [105]\n#\n\n# TODO: \u641e\u4e00\u4e2a\u8fed\u4ee3\u7248\u7684\n\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:\n        if len(preorder) == 0:\n            return None\n        mid = preorder[0]\n        inidx = inorder.index(mid)\n        leftPreorder = preorder[1:inidx+1]\n        leftInorder = inorder[0:inidx]\n        rightPreorder = preorder[inidx+1:]\n        rightInorder = inorder[inidx+1:]\n        midNode = TreeNode(mid)\n        midNode.left = self.buildTree(leftPreorder, leftInorder)\n        midNode.right = self.buildTree(rightPreorder, rightInorder)\n        return midNode\n\n# @lc code=end\n\n\n")))}p.isMDXComponent=!0}}]);