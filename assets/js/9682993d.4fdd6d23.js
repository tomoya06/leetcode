"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1469],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return d}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var f=n.createContext({}),u=function(e){var r=n.useContext(f),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},l=function(e){var r=u(e.components);return n.createElement(f.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,f=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(t),d=o,m=p["".concat(f,".").concat(d)]||p[d]||s[d]||a;return t?n.createElement(m,c(c({ref:r},l),{},{components:t})):n.createElement(m,c({ref:r},l))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=p;var i={};for(var f in r)hasOwnProperty.call(r,f)&&(i[f]=r[f]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var u=2;u<a;u++)c[u]=t[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},687:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return f},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),c=["components"],i={tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},f="\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",u={unversionedId:"\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",id:"\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",isDocsHomePage:!1,title:"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",description:"\u9898\u89e3 1_\u5077\u7784\u4e86.py",source:"@site/docs/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",permalink:"/leetcode/docs/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer33_\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217.md",tags:[{label:"\u5251\u6307offer",permalink:"/leetcode/docs/tags/\u5251\u6307offer"},{label:"\u4e8c\u53c9\u6811",permalink:"/leetcode/docs/tags/\u4e8c\u53c9\u6811"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u4e8c\u53c9\u6811"]},sidebar:"tutorialSidebar",previous:{title:"I_\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",permalink:"/leetcode/docs/\u5251\u6307offer/offer32_I_\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811"},next:{title:"\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84",permalink:"/leetcode/docs/\u5251\u6307offer/offer34_113_\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84"}},l=[{value:"\u9898\u89e3 1_\u5077\u7784\u4e86.py",id:"\u9898\u89e3-1_\u5077\u7784\u4e86py",children:[]},{value:"\u9898\u89e3 2<em>\u904d\u5386\u5012\u5e8f</em>\u6284\u7684.py",id:"\u9898\u89e3-2\u904d\u5386\u5012\u5e8f\u6284\u7684py",children:[]}],s={toc:l};function p(e){var r=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217"},"\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217"),(0,a.kt)("h2",{id:"\u9898\u89e3-1_\u5077\u7784\u4e86py"},"\u9898\u89e3 1_\u5077\u7784\u4e86.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-.py"},"# ##\u5251\u6307offer#\u4e8c\u53c9\u6811##levelm\nclass Solution:\n    def verifyPostorder(self, postorder: List[int]) -> bool:\n        def order(l, r):\n            if l >= r:\n                return True\n            cur = l\n            while cur < r and postorder[cur] < postorder[r]:\n                cur += 1\n            suf = r\n            while suf >= 0 and postorder[suf] >= postorder[r]:\n                suf -= 1\n            if cur != suf+1:\n                return False\n            return order(l, suf) and order(cur, r-1)\n\n        return order(0, len(postorder)-1)\n \n")),(0,a.kt)("h2",{id:"\u9898\u89e3-2\u904d\u5386\u5012\u5e8f\u6284\u7684py"},"\u9898\u89e3 2",(0,a.kt)("em",{parentName:"h2"},"\u904d\u5386\u5012\u5e8f"),"\u6284\u7684.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-.py"},"# \u4e0d\u592a\u5bb9\u6613\u60f3\u5230\n# \u6284\u7684\u9898\u89e3\uff1a\n# https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/solution/di-gui-he-zhan-liang-chong-fang-shi-jie-jue-zui-ha/\nclass Solution:\n    def verifyPostorder(self, postorder: List[int]) -> bool:\n        stack, root = [], float('inf')\n        for idx in range(len(postorder)-1, -1, -1):\n            if postorder[idx] > root:\n                return False\n            while stack and postorder[idx] < stack[-1]:\n                root = stack.pop(-1)\n            stack.append(postorder[idx])\n        return True\n\n")))}p.isMDXComponent=!0}}]);