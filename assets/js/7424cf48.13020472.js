"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5243],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return p}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var f=t.createContext({}),l=function(e){var n=t.useContext(f),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=l(e.components);return t.createElement(f.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,c=e.originalType,f=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(r),p=o,m=d["".concat(f,".").concat(p)]||d[p]||s[p]||c;return r?t.createElement(m,i(i({ref:n},u),{},{components:r})):t.createElement(m,i({ref:n},u))}));function p(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=d;var a={};for(var f in n)hasOwnProperty.call(n,f)&&(a[f]=n[f]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1269:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return a},contentTitle:function(){return f},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var t=r(7462),o=r(3366),c=(r(7294),r(3905)),i=["components"],a={tags:["\u5251\u6307offer","\u53cc\u6307\u9488"]},f="\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",l={unversionedId:"\u5251\u6307offer/offer52_\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",id:"\u5251\u6307offer/offer52_\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",isDocsHomePage:!1,title:"\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",description:"\u9898\u89e3 1.py",source:"@site/docs/\u5251\u6307offer/offer52_\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9.md",sourceDirName:"\u5251\u6307offer",slug:"/\u5251\u6307offer/offer52_\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",permalink:"/leetcode/docs/\u5251\u6307offer/offer52_\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/\u5251\u6307offer/offer52_\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9.md",tags:[{label:"\u5251\u6307offer",permalink:"/leetcode/docs/tags/\u5251\u6307offer"},{label:"\u53cc\u6307\u9488",permalink:"/leetcode/docs/tags/\u53cc\u6307\u9488"}],version:"current",frontMatter:{tags:["\u5251\u6307offer","\u53cc\u6307\u9488"]},sidebar:"tutorialSidebar",previous:{title:"\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",permalink:"/leetcode/docs/\u5251\u6307offer/offer51_\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9"},next:{title:"0~n-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57",permalink:"/leetcode/docs/\u5251\u6307offer/offer53_0~n-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57"}},u=[{value:"\u9898\u89e3 1.py",id:"\u9898\u89e3-1py",children:[]},{value:"\u9898\u89e3 2_\u66f4\u5e72\u51c0\u7684\u5199\u6cd5.py",id:"\u9898\u89e3-2_\u66f4\u5e72\u51c0\u7684\u5199\u6cd5py",children:[]}],s={toc:u};function d(e){var n=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9"},"\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9"),(0,c.kt)("h2",{id:"\u9898\u89e3-1py"},"\u9898\u89e3 1.py"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-.py"},"# ##\u5251\u6307offer#\u53cc\u6307\u9488##levelm\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        curA, curB = headA, headB\n        while curA and curB:\n            curA = curA.next\n            curB = curB.next\n        cnt = 0\n        start, mid = None, None\n        cur = None\n\n        if curA:\n            start = headA\n            mid = headB\n            cur = curA\n        else:\n            start = headB\n            mid = headA\n            cur = curB\n        \n        while cur:\n            cur = cur.next\n            start = start.next\n        \n        while start != mid:\n            start = start.next\n            mid = mid.next\n        \n        return start\n\n")),(0,c.kt)("h2",{id:"\u9898\u89e3-2_\u66f4\u5e72\u51c0\u7684\u5199\u6cd5py"},"\u9898\u89e3 2_\u66f4\u5e72\u51c0\u7684\u5199\u6cd5.py"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-.py"},"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        curA, curB = headA, headB\n\n        while curA != curB:\n            curA = headB if curA is None else curA.next\n            curB = headA if curB is None else curB.next\n        \n        return curA\n\n")))}d.isMDXComponent=!0}}]);